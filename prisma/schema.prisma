// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  user_id    Int       @id @default(autoincrement())
  id         String    @unique @db.VarChar(20)
  pw         String
  name       String    @db.VarChar(20)
  nickname   String    @db.VarChar(30)
  birth      DateTime  @db.Date
  gender     String    @db.Char(1)
  created_at DateTime  @default(now())
  updated_at DateTime?

  following Follow[]   @relation("from_user")
  followers Follow[]   @relation("to_user")
  feeds     Feed[]
  comments  Comment[]
  feedlikes Feedlike[]
}

model Follow {
  follow_id Int @id @default(autoincrement())

  to_user_id Int
  to_user    User @relation("to_user", fields: [to_user_id], references: [user_id], onDelete: Cascade)

  from_user_id Int
  from_user    User @relation("from_user", fields: [from_user_id], references: [user_id], onDelete: Cascade)
}

model Feed {
  feed_id    Int       @id @default(autoincrement())
  contents   String    @db.Text()
  created_at DateTime  @default(now())
  updated_at DateTime?

  user_id Int
  user    User @relation(fields: [user_id], references: [user_id], onDelete: Cascade)

  comments  Comment[]
  feedlikes Feedlike[]
}

model Comment {
  comment_id Int       @id @default(autoincrement())
  contents   String
  created_at DateTime  @default(now())
  updated_at DateTime?

  feed_id Int
  feed    Feed @relation(fields: [feed_id], references: [feed_id], onDelete: Cascade)

  user_id Int
  user    User @relation(fields: [user_id], references: [user_id], onDelete: Cascade)
}

model Feedlike {
  user_id Int
  user    User @relation(fields: [user_id], references: [user_id], onDelete: Cascade)

  feed_id Int
  feed    Feed @relation(fields: [feed_id], references: [feed_id], onDelete: Cascade)

  @@id([user_id, feed_id])
}
